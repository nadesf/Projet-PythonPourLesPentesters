# Imports des modules 
import argparse 
from web_vulnerability_scanner import *

parser = argparse.ArgumentParser(description="Description du script")
parser.add_argument("--target", help="Adresse web de la cible")
parser.add_argument("--vuln", help="Identifiant de la vulnérabilité à testé.")
parser.add_argument("--login_url", default="http://localhost/login.php", help="URL où sont envoyés les données lors de l'authentification à l'application web cible")
parser.add_argument("--credentials", default="bee:bug", help="Le login et le mot de passe pour se connecter à l'application séparéer par des 2 points (Ex : bee:bug)")
args = parser.parse_args()

banner = r"""
 __      __      ___.       _________                                         
/  \    /  \ ____\_ |__    /   _____/ ____ _____    ____   ____   ___________ 
\   \/\/   // __ \| __ \   \_____  \_/ ___\\__  \  /    \ /    \_/ __ \_  __ \
 \        /\  ___/| \_\ \  /        \  \___ / __ \|   |  \   |  \  ___/|  | \/
  \__/\  /  \___  >___  / /_______  /\___  >____  /___|  /___|  /\___  >__|   
       \/       \/    \/          \/     \/     \/     \/     \/     \/       
"""


print(Back.GREEN + Style.BRIGHT + banner)
print("Développé par : NADE Fabrice & KOFFI Ange\n")


if args.vuln.lower() == "a1":
    print(Style.BRIGHT + Back.GREEN + "===== A01:2021-Broken Access Control =====")
    a1_broken_access_control(args.target)
elif args.vuln.lower() == "a2":
    print(Style.BRIGHT + Back.GREEN + "===== A02:2021-Cryptographic Failures =====")
    a2_cryptographie_failure(args.login_url, args.credentials, args.target)
elif args.vuln.lower() == "a3":
    print(Style.BRIGHT + Back.GREEN + "===== A03:2021-Injection =====")
    a3_injection(args.login_url, args.credentials, args.target)
elif args.vuln.lower() == "a4":
    print(Style.BRIGHT + Back.GREEN + "===== A04:2021-Insecure Design  =====")
    a4_insure_design(args.target)
elif args.vuln.lower() == "a5":
    print(Style.BRIGHT + Back.GREEN + "===== A05:2021-Security Misconfiguration =====")
    a5_security_misconfiguration(args.target)
elif args.vuln.lower() == "a6":
    print(" Vulnerabilité : ", args.vuln)
elif args.vuln.lower() == "a7":
    print(Style.BRIGHT + Back.GREEN + "===== A07:2021-Identification and Authentication Failures =====")
    print("\n")
    usernames_file = input("Chemin absolue ou relatif vers le fichier des noms d'utilisateur : ")
    passwords_file = input("Chemin absolue ou relatif vers le fichier des mots de passe : ")
    a7_identification_and_authentification_failures(args.target, usernames_file, passwords_file)
elif args.vuln.lower() == "a8":
    print(Style.BRIGHT + Back.GREEN + "===== A08:2021-Software and Data Integrity Failures =====")
    a8_software_and_data_integrity_failures(args.target)
elif args.vuln.lower() == "a9":
    print(Style.BRIGHT + Back.GREEN + "===== A09:2021-Security Logging and Monitoring Failures =====")
    a9_security_logging_monitoring_failures(args.login_url, args.credentials, args.target)
elif args.vuln.lower() == "a10":
    print(Style.BRIGHT + Back.GREEN + "===== A09:2021-Security Logging and Monitoring Failures =====")
    a3_injection(args.login_url, args.credentials, args.target)
else:
    print("Cette valeur n'est pas prise en charge ...")